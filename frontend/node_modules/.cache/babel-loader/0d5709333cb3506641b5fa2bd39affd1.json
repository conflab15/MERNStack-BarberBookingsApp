{"ast":null,"code":"var _jsxFileName = \"D:\\\\University Work\\\\Year 2 (Level 5)\\\\UX and Full Stack Dev\\\\FixedBarberShop\\\\BarberWebApp\\\\barberwebapp\\\\frontend\\\\src\\\\Screens\\\\RegisterScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport FormContainer from '../Components/FormContainer';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col, FormControl } from 'react-bootstrap'; //Imports for registration functionality\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { register, logout } from '../actions/customerActions';\nimport Loader from '../Components/Loader';\nimport Message from '../Components/Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterScreen = ({\n  history\n}) => {\n  _s();\n\n  const [forename, setForename] = useState('');\n  const [surname, setSurname] = useState('');\n  const [addressline1, setAddressLine1] = useState('');\n  const [addressline2, setAddressLine2] = useState('');\n  const [town, setTown] = useState('');\n  const [postcode, setPostcode] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState(null);\n  const dispatch = useDispatch();\n  const customerRegister = useSelector(state => state.customerRegister);\n  const {\n    loading,\n    error,\n    customerInfo\n  } = customerRegister;\n  useEffect(() => {\n    if (customerInfo) {\n      history.push('/account');\n    }\n  }, [history, customerInfo]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage('Error: Passwords do not match!');\n    } else {\n      dispatch(register(forename, surname, addressline1, addressline2, town, postcode, email, password, confirmPassword));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"py-3\",\n        children: \"Register!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 27\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"info\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"forename\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Forename\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"forename\",\n            placeholder: \"Enter your forename...\",\n            value: forename,\n            onChange: e => setForename(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"surname\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Surname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"surname\",\n            placeholder: \"Enter your surname...\",\n            value: surname,\n            onChange: e => setSurname(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlID: \"addressline1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Address Line 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"addressline1\",\n            placeholder: \"Enter the first line of your address...\",\n            value: addressline1,\n            onChange: e => setAddressLine1(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"addressline2\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Address Line 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"addressline2\",\n            placeholder: \"Enter the second line of your address...\",\n            value: addressline2,\n            onChange: e => setAddressLine2(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"town\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Town\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"town\",\n            placeholder: \"Enter the town of your address...\",\n            value: town,\n            onChange: e => setTown(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"postcode\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Post Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"postcode\",\n            placeholder: \"Enter the post code of your address...\",\n            value: postcode,\n            onChange: e => setPostcode(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"email\",\n            placeholder: \"Enter your email address...\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"password\",\n            placeholder: \"Enter your password...\",\n            value: password,\n            onChange: e => setForename(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"confirmPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"confirmPassword\",\n            placeholder: \"Enter your password again...\",\n            value: confirmPassword,\n            onChange: e => setForename(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          className: \"btn btn-block btn-success rounded\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"py-3\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [\"Have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: \"Sign in!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegisterScreen, \"V417XqdgxnW2qILq9mimamvWFoE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = RegisterScreen;\nexport default RegisterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"sources":["D:/University Work/Year 2 (Level 5)/UX and Full Stack Dev/FixedBarberShop/BarberWebApp/barberwebapp/frontend/src/Screens/RegisterScreen.jsx"],"names":["React","useEffect","useState","FormContainer","Link","Form","Button","Row","Col","FormControl","useDispatch","useSelector","register","logout","Loader","Message","RegisterScreen","history","forename","setForename","surname","setSurname","addressline1","setAddressLine1","addressline2","setAddressLine2","town","setTown","postcode","setPostcode","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","customerRegister","state","loading","error","customerInfo","push","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport FormContainer from '../Components/FormContainer'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, FormControl } from 'react-bootstrap'\r\n\r\n//Imports for registration functionality\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { register, logout } from '../actions/customerActions'\r\nimport Loader from '../Components/Loader'\r\nimport Message from '../Components/Message'\r\n\r\n\r\nconst RegisterScreen = ({ history }) => {\r\n\r\n    const [forename, setForename] = useState('')\r\n    const [surname, setSurname] = useState('')\r\n    const [addressline1, setAddressLine1] = useState('')\r\n    const [addressline2, setAddressLine2] = useState('')\r\n    const [town, setTown] = useState('')\r\n    const [postcode, setPostcode] = useState('')\r\n    const [email, setEmail] = useState('')\r\n\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const customerRegister = useSelector(state => state.customerRegister)\r\n    const { loading, error, customerInfo } = customerRegister\r\n\r\n    useEffect(() => {\r\n        if (customerInfo) {\r\n            history.push('/account')\r\n        }\r\n    }, [history, customerInfo])\r\n\r\n    const submitHandler = (e) => {\r\n\r\n        e.preventDefault()\r\n        if (password !== confirmPassword) {\r\n            setMessage('Error: Passwords do not match!')\r\n        } else {\r\n            dispatch(register(forename, surname, addressline1, addressline2, town, postcode, email, password, confirmPassword))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <FormContainer>\r\n                <h1 className='py-3'>Register!</h1>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                {message && <Message variant='info'>{message}</Message>}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='forename'>\r\n                        <Form.Label>Forename</Form.Label>\r\n                        <FormControl\r\n                            type='forename'\r\n                            placeholder='Enter your forename...'\r\n                            value={forename}\r\n                            onChange={(e) => setForename(e.target.value)}\r\n                        ></FormControl>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='surname'>\r\n                        <Form.Label>Surname</Form.Label>\r\n                        <FormControl\r\n                            type='surname'\r\n                            placeholder='Enter your surname...'\r\n                            value={surname}\r\n                            onChange={(e) => setSurname(e.target.value)}\r\n                        ></FormControl>\r\n                    </Form.Group>\r\n                    <Form.Group controlID='addressline1'>\r\n                        <Form.Label>Address Line 1</Form.Label>\r\n                        <FormControl\r\n                            type='addressline1'\r\n                            placeholder='Enter the first line of your address...'\r\n                            value={addressline1}\r\n                            onChange={(e) => setAddressLine1(e.target.value)}\r\n                        ></FormControl>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='addressline2'>\r\n                        <Form.Label>Address Line 2</Form.Label>\r\n                        <FormControl\r\n                            type='addressline2'\r\n                            placeholder='Enter the second line of your address...'\r\n                            value={addressline2}\r\n                            onChange={(e) => setAddressLine2(e.target.value)}\r\n                        ></FormControl>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='town'>\r\n                        <Form.Label>Town</Form.Label>\r\n                        <FormControl\r\n                            type='town'\r\n                            placeholder='Enter the town of your address...'\r\n                            value={town}\r\n                            onChange={(e) => setTown(e.target.value)}\r\n                        ></FormControl>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='postcode'>\r\n                        <Form.Label>Post Code</Form.Label>\r\n                        <FormControl\r\n                            type='postcode'\r\n                            placeholder='Enter the post code of your address...'\r\n                            value={postcode}\r\n                            onChange={(e) => setPostcode(e.target.value)}\r\n                        ></FormControl>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email</Form.Label>\r\n                        <FormControl\r\n                            type='email'\r\n                            placeholder='Enter your email address...'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        ></FormControl>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <FormControl\r\n                            type='password'\r\n                            placeholder='Enter your password...'\r\n                            value={password}\r\n                            onChange={(e) => setForename(e.target.value)}\r\n                        ></FormControl>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <FormControl\r\n                            type='confirmPassword'\r\n                            placeholder='Enter your password again...'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setForename(e.target.value)}\r\n                        ></FormControl>\r\n                    </Form.Group>\r\n                    <Button\r\n                        type='submit'\r\n                        variant='primary'\r\n                        className='btn btn-block btn-success rounded'\r\n                    >Register</Button>\r\n                </Form>\r\n                <Row className='py-3'>\r\n                    <Col>\r\n                        Have an account? <Link to=\"/login\">Sign in!</Link>\r\n                    </Col>\r\n                </Row>\r\n            </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n"]},"metadata":{},"sourceType":"module"}