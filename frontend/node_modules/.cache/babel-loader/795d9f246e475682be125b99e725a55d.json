{"ast":null,"code":"var _jsxFileName = \"D:\\\\University Work\\\\Year 2 (Level 5)\\\\UX and Full Stack Dev\\\\FixedBarberShop\\\\BarberWebApp\\\\barberwebapp\\\\frontend\\\\src\\\\Screens\\\\CustomerScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col, FormControl, Container, Table } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../Components/Loader';\nimport { getCustomerDetails, logout } from '../actions/customerActions';\nimport { listBookings, personalBookingList, confirmBooking } from '../actions/bookingActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomerScreen = ({\n  history\n}) => {\n  _s();\n\n  const [forename, setForename] = useState('');\n  const [surname, setSurname] = useState('');\n  const [addressline1, setAddressLine1] = useState('');\n  const [addressline2, setAddressLine2] = useState('');\n  const [town, setTown] = useState('');\n  const [postcode, setPostcode] = useState('');\n  const [email, setEmail] = useState('');\n  const dispatch = useDispatch();\n  const customerLogin = useSelector(state => state.customerLogin);\n  const {\n    customerInfo\n  } = customerLogin;\n  const customerDetails = useSelector(state => state.customerDetails);\n  const {\n    loading,\n    error,\n    customer\n  } = customerDetails;\n  const personalBookings = useSelector(state => state.personalBookings);\n  const {\n    bookingLoading,\n    bookingError,\n    bookings\n  } = personalBookings;\n  const bookingList = useSelector(state => state.bookingList);\n  const {\n    allLoading,\n    allError,\n    allBookings\n  } = bookingList;\n  const confirmNewBooking = useSelector(state => state.confirmBooking);\n  const {\n    success\n  } = confirmNewBooking;\n  useEffect(() => {\n    if (!customerInfo || error) {\n      history.push('/login');\n    }\n\n    if (!customer || !customer.forename && customer.surname) {\n      dispatch(getCustomerDetails('profile'));\n    } else {\n      setForename(customer.forename);\n      setSurname(customer.surname);\n      setAddressLine1(customer.AddressLine1);\n      setAddressLine2(customer.AddressLine2);\n      setTown(customer.town);\n      setPostcode(customer.Postcode);\n      setEmail(customer.Email);\n    }\n\n    if (customer) {\n      dispatch(personalBookingList());\n    }\n\n    if (success) {\n      dispatch(listBookings());\n    }\n  }, [dispatch, history, success]);\n\n  const ConfirmBooking = booking => {\n    console.log(booking);\n    dispatch(confirmBooking(booking));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"My Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Customer:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 28\n            }, this), forename, \" \", surname]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Email: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 28\n            }, this), email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CustomerScreen, \"Wjxri1yTttmr3N42z2C/NgWlAm8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = CustomerScreen;\nexport default CustomerScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerScreen\");","map":{"version":3,"sources":["D:/University Work/Year 2 (Level 5)/UX and Full Stack Dev/FixedBarberShop/BarberWebApp/barberwebapp/frontend/src/Screens/CustomerScreen.jsx"],"names":["React","useState","useEffect","Link","Form","Button","Row","Col","FormControl","Container","Table","useDispatch","useSelector","Loader","getCustomerDetails","logout","listBookings","personalBookingList","confirmBooking","CustomerScreen","history","forename","setForename","surname","setSurname","addressline1","setAddressLine1","addressline2","setAddressLine2","town","setTown","postcode","setPostcode","email","setEmail","dispatch","customerLogin","state","customerInfo","customerDetails","loading","error","customer","personalBookings","bookingLoading","bookingError","bookings","bookingList","allLoading","allError","allBookings","confirmNewBooking","success","push","AddressLine1","AddressLine2","Postcode","Email","ConfirmBooking","booking","console","log"],"mappings":"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","sourcesContent":["\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, FormControl, Container, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../Components/Loader'\r\nimport { getCustomerDetails, logout } from '../actions/customerActions'\r\nimport { listBookings, personalBookingList, confirmBooking } from '../actions/bookingActions'\r\n\r\nconst CustomerScreen = ({ history }) => {\r\n\r\n    const [forename, setForename] = useState('')\r\n    const [surname, setSurname] = useState('')\r\n    const [addressline1, setAddressLine1] = useState('')\r\n    const [addressline2, setAddressLine2] = useState('')\r\n    const [town, setTown] = useState('')\r\n    const [postcode, setPostcode] = useState('')\r\n    const [email, setEmail] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const customerLogin = useSelector(state => state.customerLogin)\r\n    const { customerInfo } = customerLogin\r\n\r\n    const customerDetails = useSelector(state => state.customerDetails)\r\n    const { loading, error, customer } = customerDetails\r\n\r\n    const personalBookings = useSelector(state => state.personalBookings)\r\n    const { bookingLoading, bookingError, bookings } = personalBookings\r\n\r\n    const bookingList = useSelector(state => state.bookingList)\r\n    const { allLoading, allError, allBookings } = bookingList\r\n\r\n    const confirmNewBooking = useSelector(state => state.confirmBooking)\r\n    const { success } = confirmNewBooking\r\n\r\n    useEffect(() => {\r\n\r\n        if (!customerInfo || error) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (!customer || !customer.forename && customer.surname) {\r\n            dispatch(getCustomerDetails('profile'))\r\n        }\r\n        else {\r\n            setForename(customer.forename)\r\n            setSurname(customer.surname)\r\n            setAddressLine1(customer.AddressLine1)\r\n            setAddressLine2(customer.AddressLine2)\r\n            setTown(customer.town)\r\n            setPostcode(customer.Postcode)\r\n            setEmail(customer.Email)\r\n        }\r\n\r\n        if (customer) {\r\n            dispatch(personalBookingList())\r\n        }\r\n\r\n        if (success) {\r\n            dispatch(listBookings())\r\n        }\r\n    }, [dispatch, history, success])\r\n\r\n    const ConfirmBooking = (booking) => {\r\n        console.log(booking)\r\n        dispatch(confirmBooking(booking))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                {loading && <Loader />}\r\n                <Row>\r\n                    <Col>\r\n                        <h1>My Account</h1>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <p><b>Customer:</b>{forename} {surname}</p>\r\n                        <p><b>Email: </b>{email}</p>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerScreen\r\n"]},"metadata":{},"sourceType":"module"}