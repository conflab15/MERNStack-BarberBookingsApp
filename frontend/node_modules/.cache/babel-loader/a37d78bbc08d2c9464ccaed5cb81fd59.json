{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { haircutListReducer, haircutDetailsReducer } from './reducers/haircutReducers';\nimport { customerLoginReducer, customerDetailsReducer, customerRegisterReducer } from './reducers/customerReducers';\nimport { bookingByDayReducer, bookingConfirmReducer, bookingListReducer, createBookingReducer, personalBookingsReducer } from './reducers/bookingReducers'; //Use Reducers\n\nconst reducer = combineReducers({\n  haircutList: haircutListReducer,\n  haircutDetails: haircutDetailsReducer,\n  customerLogin: customerLoginReducer,\n  customerRegister: customerRegisterReducer,\n  customerDetails: customerDetailsReducer,\n  bookingList: bookingListReducer,\n  personalBookings: personalBookingsReducer,\n  confirmBooking: bookingConfirmReducer,\n  existingDayBooking: bookingByDayReducer,\n  createBooking: createBookingReducer\n}); //Setting the initial state to empty\n\nconst customerInfoFromStorage = localStorage.getItem('customerInfo') ? JSON.parse(localStorage.getItem('customerInfo')) : [];\nconst initialState = {\n  customerLogin: {\n    customerInfo: customerInfoFromStorage\n  }\n}; //Handling the Middleware Usage\n\nconst middleware = [thunk];\nconst barberShop = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default barberShop;","map":{"version":3,"sources":["D:/University Work/Year 2 (Level 5)/UX and Full Stack Dev/FixedBarberShop/BarberWebApp/barberwebapp/frontend/src/barberShop.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","haircutListReducer","haircutDetailsReducer","customerLoginReducer","customerDetailsReducer","customerRegisterReducer","bookingByDayReducer","bookingConfirmReducer","bookingListReducer","createBookingReducer","personalBookingsReducer","reducer","haircutList","haircutDetails","customerLogin","customerRegister","customerDetails","bookingList","personalBookings","confirmBooking","existingDayBooking","createBooking","customerInfoFromStorage","localStorage","getItem","JSON","parse","initialState","customerInfo","middleware","barberShop"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,QAA0D,4BAA1D;AACA,SAAQC,oBAAR,EAA8BC,sBAA9B,EAAsDC,uBAAtD,QAAoF,6BAApF;AACA,SAASC,mBAAT,EAA8BC,qBAA9B,EAAqDC,kBAArD,EAAyEC,oBAAzE,EAA+FC,uBAA/F,QAA8H,4BAA9H,C,CAEA;;AACA,MAAMC,OAAO,GAAGd,eAAe,CAAC;AAC5Be,EAAAA,WAAW,EAACX,kBADgB;AAE5BY,EAAAA,cAAc,EAACX,qBAFa;AAG5BY,EAAAA,aAAa,EAACX,oBAHc;AAI5BY,EAAAA,gBAAgB,EAACV,uBAJW;AAK5BW,EAAAA,eAAe,EAACZ,sBALY;AAM5Ba,EAAAA,WAAW,EAACT,kBANgB;AAO5BU,EAAAA,gBAAgB,EAACR,uBAPW;AAQ5BS,EAAAA,cAAc,EAACZ,qBARa;AAS5Ba,EAAAA,kBAAkB,EAACd,mBATS;AAU5Be,EAAAA,aAAa,EAACZ;AAVc,CAAD,CAA/B,C,CAaA;;AACA,MAAMa,uBAAuB,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,IAC5BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CAD4B,GACqB,EADrD;AAGA,MAAMG,YAAY,GAAG;AACjBb,EAAAA,aAAa,EAAE;AACXc,IAAAA,YAAY,EAAEN;AADH;AADE,CAArB,C,CAMA;;AACA,MAAMO,UAAU,GAAG,CAAC9B,KAAD,CAAnB;AAEA,MAAM+B,UAAU,GAAElC,WAAW,CACzBe,OADyB,EAEzBgB,YAFyB,EAGzB3B,mBAAmB,CAACF,eAAe,CAAC,GAAG+B,UAAJ,CAAhB,CAHM,CAA7B;AAMA,eAAeC,UAAf","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport { haircutListReducer, haircutDetailsReducer } from './reducers/haircutReducers'\r\nimport {customerLoginReducer, customerDetailsReducer, customerRegisterReducer} from './reducers/customerReducers'\r\nimport { bookingByDayReducer, bookingConfirmReducer, bookingListReducer, createBookingReducer, personalBookingsReducer } from './reducers/bookingReducers'\r\n\r\n//Use Reducers\r\nconst reducer = combineReducers({\r\n    haircutList:haircutListReducer,\r\n    haircutDetails:haircutDetailsReducer,\r\n    customerLogin:customerLoginReducer,\r\n    customerRegister:customerRegisterReducer,\r\n    customerDetails:customerDetailsReducer,\r\n    bookingList:bookingListReducer,\r\n    personalBookings:personalBookingsReducer,\r\n    confirmBooking:bookingConfirmReducer,\r\n    existingDayBooking:bookingByDayReducer,\r\n    createBooking:createBookingReducer\r\n})\r\n\r\n//Setting the initial state to empty\r\nconst customerInfoFromStorage = localStorage.getItem('customerInfo')?\r\n    JSON.parse(localStorage.getItem('customerInfo')):[]\r\n\r\nconst initialState = {\r\n    customerLogin: {\r\n        customerInfo: customerInfoFromStorage\r\n    }\r\n}\r\n\r\n//Handling the Middleware Usage\r\nconst middleware = [thunk]\r\n\r\nconst barberShop= createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default barberShop"]},"metadata":{},"sourceType":"module"}