{"ast":null,"code":"import axios from 'axios'; //Login Actions\n\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: 'CUSTOMER_LOGIN_REQUEST'\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/customers/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: 'CUSTOMER_LOGIN_SUCCESS',\n      payload: data\n    });\n    localStorage.setItem('customerInfo', JSON.stringify(data)); //Storing the Item within state data...\n  } catch (error) {\n    dispatch({\n      type: 'CUSTOMER_LOGIN_FAIL',\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getCustomerDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: 'CUSTOMER_DETAILS_REQUEST'\n    });\n    const {\n      customerLogin: {\n        customerInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: customerInfo.token\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/customers/${id}`, config);\n    dispatch({\n      type: 'CUSTOMER_DETAILS_SUCCESS',\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'CUSTOMER_DETAILS_FAIL',\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const register = (forename, surname, addressline1, addressline2, town, postcode, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: 'CUSTOMER_REGISTER_REQUEST'\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/customers/', {\n      forename,\n      surname,\n      addressline1,\n      addressline2,\n      town,\n      postcode,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: 'CUSTOMER_REGISTER_SUCCESS',\n      payload: data\n    });\n    dispatch({\n      type: 'CUSTOMER_LOGIN_SUCCESS',\n      payload: data\n    });\n    localStorage.setItem('customerInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: 'CUSTOMER_REGISTER_FAIL',\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('customerInfo');\n  dispatch({\n    type: 'CUSTOMER_DETAILS_RESET'\n  });\n  dispatch({\n    type: 'CUSTOMER_LOGOUT'\n  });\n};","map":{"version":3,"sources":["D:/University Work/Year 2 (Level 5)/UX and Full Stack Dev/FixedBarberShop/BarberWebApp/barberwebapp/frontend/src/actions/customerActions.js"],"names":["axios","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","getCustomerDetails","id","getState","customerLogin","customerInfo","Authorization","token","get","register","forename","surname","addressline1","addressline2","town","postcode","logout","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAMC,QAAN,IAAmB;AACzD,MAAG;AACCA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE;AADD,KAAD,CAAR;AAGA,UAAMC,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;AAKA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMR,KAAK,CAACS,IAAN,CAAW,sBAAX,EAAmC;AAACP,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAnC,EAAsDG,MAAtD,CAArB;AAEAF,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE,wBADD;AAELK,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAIAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAArC,EAfD,CAe4D;AAC9D,GAhBD,CAiBA,OAAMO,KAAN,EAAY;AACRX,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE,qBADD;AAELK,MAAAA,OAAO,EAACK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GAAgDF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAApE,GAA6EF,KAAK,CAACE;AAFtF,KAAD,CAAR;AAIH;AACJ,CAxBM;AA0BP,OAAO,MAAMC,kBAAkB,GAAIC,EAAD,IAAQ,OAAMf,QAAN,EAAgBgB,QAAhB,KAA6B;AAEnE,MAAI;AACAhB,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE;AADD,KAAD,CAAR;AAIA,UAAM;AAACgB,MAAAA,aAAa,EAAE;AAACC,QAAAA;AAAD;AAAhB,QAAkCF,QAAQ,EAAhD;AAEA,UAAMd,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAELgB,QAAAA,aAAa,EAAED,YAAY,CAACE;AAFvB;AADE,KAAf;AAOA,UAAM;AAAChB,MAAAA;AAAD,QAAS,MAAMR,KAAK,CAACyB,GAAN,CAAW,kBAAiBN,EAAG,EAA/B,EAAkCb,MAAlC,CAArB;AACAF,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE,0BADD;AAELK,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAIH,GAnBD,CAoBA,OAAMO,KAAN,EAAY;AACRX,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE,uBADD;AAELK,MAAAA,OAAO,EAAEK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GAAgDF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAApE,GAA6EF,KAAK,CAACE;AAFvF,KAAD,CAAR;AAIH;AACJ,CA5BM;AA8BP,OAAO,MAAMS,QAAQ,GAAG,CAACC,QAAD,EAAWC,OAAX,EAAoBC,YAApB,EAAkCC,YAAlC,EAAgDC,IAAhD,EAAsDC,QAAtD,EAAgE9B,KAAhE,EAAuEC,QAAvE,KAAoF,MAAMC,QAAN,IAAmB;AAE3H,MAAI;AACAA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE;AADD,KAAD,CAAR;AAIA,UAAMC,MAAM,GAAE;AACVC,MAAAA,OAAO,EAAC;AACJ,wBAAgB;AADZ;AADE,KAAd;AAMA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMR,KAAK,CAACS,IAAN,CAAW,iBAAX,EAA8B;AAACkB,MAAAA,QAAD;AAAWC,MAAAA,OAAX;AAAoBC,MAAAA,YAApB;AAAkCC,MAAAA,YAAlC;AAAgDC,MAAAA,IAAhD;AAAsDC,MAAAA,QAAtD;AAAgE9B,MAAAA,KAAhE;AAAuEC,MAAAA;AAAvE,KAA9B,EAAgHG,MAAhH,CAArB;AACAF,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE,2BADD;AAELK,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKAJ,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE,wBADD;AAELK,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAArC;AACH,GAvBD,CAwBA,OAAMO,KAAN,EAAY;AACRX,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE,wBADD;AAELK,MAAAA,OAAO,EAAEK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GAAgDF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAApE,GAA6EF,KAAK,CAACE;AAFvF,KAAD,CAAR;AAIH;AACJ,CAhCM;AAkCP,OAAO,MAAMgB,MAAM,GAAG,MAAM7B,QAAD,IAAY;AACnCO,EAAAA,YAAY,CAACuB,UAAb,CAAwB,cAAxB;AACA9B,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAC;AAAN,GAAD,CAAR;AACAD,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAE;AAAP,GAAD,CAAR;AACH,CAJM","sourcesContent":["import axios from 'axios'\r\n\r\n//Login Actions\r\nexport const login = (email, password) => async(dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: 'CUSTOMER_LOGIN_REQUEST'\r\n        })\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const {data} = await axios.post('/api/customers/login', {email, password}, config)\r\n\r\n        dispatch({\r\n            type: 'CUSTOMER_LOGIN_SUCCESS',\r\n            payload: data\r\n        })\r\n        localStorage.setItem('customerInfo', JSON.stringify(data)) //Storing the Item within state data...\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: 'CUSTOMER_LOGIN_FAIL',\r\n            payload:error.response && error.response.data.message ? error.response.data.message: error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getCustomerDetails = (id) => async(dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: 'CUSTOMER_DETAILS_REQUEST'\r\n        })\r\n\r\n        const {customerLogin: {customerInfo}} = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: customerInfo.token\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(`/api/customers/${id}`, config)\r\n        dispatch({\r\n            type: 'CUSTOMER_DETAILS_SUCCESS',\r\n            payload: data\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: 'CUSTOMER_DETAILS_FAIL',\r\n            payload: error.response && error.response.data.message ? error.response.data.message: error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const register = (forename, surname, addressline1, addressline2, town, postcode, email, password) => async(dispatch) => {\r\n    \r\n    try {\r\n        dispatch({\r\n            type: 'CUSTOMER_REGISTER_REQUEST'\r\n        })\r\n\r\n        const config ={\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post('/api/customers/', {forename, surname, addressline1, addressline2, town, postcode, email, password}, config)\r\n        dispatch({\r\n            type: 'CUSTOMER_REGISTER_SUCCESS',\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: 'CUSTOMER_LOGIN_SUCCESS',\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('customerInfo', JSON.stringify(data))\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: 'CUSTOMER_REGISTER_FAIL',\r\n            payload: error.response && error.response.data.message ? error.response.data.message: error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () =>(dispatch)=>{\r\n    localStorage.removeItem('customerInfo')\r\n    dispatch({type:'CUSTOMER_DETAILS_RESET'})\r\n    dispatch({type: 'CUSTOMER_LOGOUT'})\r\n}"]},"metadata":{},"sourceType":"module"}